version: '3.8'
services:
  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=library_db
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: .
    volumes:
      - .:/app
    ports:
      - 8000:8000
    environment:
      - APP_DB_HOST=db
      - APP_DB_USER=postgres
      - APP_DB_PASS=password
      - APP_DB_NAME=library_db
      - APP_JWT_SECRET_KEY=secret
      #- DATABASE_URL: postgresql://user:password@db:5432/library_db
    depends_on:
      - db
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile 
    volumes:
      - ./frontend:/app
    ports:
      - 5000:5000
    environment:
      - FLASK_APP=frontend_app.py
      - FLASK_ENV=development
      - API_URL=http://api:8000
    depends_on:
      api:
        condition: service_healthy
    restart: always

volumes:
  postgres_data: